#parse ( "include/loader_stringutils.vm" )
#parse ( "include/loader_wordutils.vm" )
#parse ( "include/loader_inflector.vm" )
#foreach( $entitie in $model.allEntites )
#if ( $entitie.name.contains("Enum_") )
#set ( $entitieName = $entitie.name.replace("Enum_", "") )
#foreach( $field in $entitie.attributes )
enum-$strUtils.join($strUtils.splitByCharacterTypeCamelCase($entitieName), "-").toLowerCase()-$strUtils.join($strUtils.splitByCharacterTypeCamelCase($field.name), "-").toLowerCase()=$field.name
#end
#end
#end
#foreach( $entitie in $model.allEntites )
#if ( !$entitie.name.contains("Enum_") ) 
#set ( $entitieNameLowerCaseWithDot = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($entitie.name), ".").toLowerCase() )
#set ( $entitieNameLowerCaseWithSpace = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($entitie.name), ".").toLowerCase() )
#set ( $pluralEntitieNameLowerCaseWithDot = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($entitie.name), ".").toLowerCase() )
#foreach( $field in $entitie.keyAttributes )
#set ( $fieldNameLowerCaseWithDot = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($field.name), ".").toLowerCase() )
#set ( $pluralFieldNameLowerCaseWithDot = $inflector.getInstance().pluralize($strUtils.join($strUtils.splitByCharacterTypeCamelCase($field.name), ".").toLowerCase()) )
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.null=The ${entitieNameLowerCaseWithSpace}''s identifier is required!
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.notfound=The ${entitieNameLowerCaseWithSpace} with identifier: ''{0}'' has not been found!
validation.${pluralEntitieNameLowerCaseWithDot}.${pluralFieldNameLowerCaseWithDot}.null=The ${entitieNameLowerCaseWithSpace}''s identifiers are required!
#end
#foreach( $field in $entitie.selectedLinks )
#if ( $field.fieldType.contains("Enum_") ) 
#set ( $fieldNameLowerCaseWithDot = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($field.fieldName), ".").toLowerCase() )
#set ( $fieldNameLowerCaseWithSpace = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($field.fieldName), " ").toLowerCase() )
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.blank=The ${entitieNameLowerCaseWithSpace}''s ${fieldNameLowerCaseWithSpace} is required!
#end
#end
#foreach( $field in $entitie.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
#set ( $fieldNameLowerCaseWithDot = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($field.name), ".").toLowerCase() )
#set ( $fieldNameLowerCaseWithSpace = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($field.name), " ").toLowerCase() )
#if ( $field.isNotBlank() )
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.blank=The ${entitieNameLowerCaseWithSpace}''s ${fieldNameLowerCaseWithSpace} is required!
#end
#if ( $field.isNotNull() || $field.type.contains("Enum_") )
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.null=The ${entitieNameLowerCaseWithSpace}''s ${fieldNameLowerCaseWithSpace} is required!
#end
#if ( $strUtils.split($field.databaseComment, ", ").contains("UniqueKey") )
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.already.exists=There is already a ${entitieNameLowerCaseWithSpace} with the ${fieldNameLowerCaseWithSpace} ''{0}'' registered!
#end
#if ( $strUtils.split($field.databaseComment, ", ").contains("PositiveOrZero") )
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.negative=The ${fieldNameLowerCaseWithSpace} of the ${entitieNameLowerCaseWithSpace} cannot be negative!
#end
#if ( $field.isDateType() || $field.isTimestampType() )
validation.${entitieNameLowerCaseWithDot}.${fieldNameLowerCaseWithDot}.invalid=The ${entitieNameLowerCaseWithSpace}''s ${fieldNameLowerCaseWithSpace} is invalid!
validation.${entitieNameLowerCaseWithDot}.start.${fieldNameLowerCaseWithDot}.invalid=The ${entitieNameLowerCaseWithSpace}''s initial ${fieldNameLowerCaseWithSpace} is invalid!
validation.${entitieNameLowerCaseWithDot}.end.${fieldNameLowerCaseWithDot}.invalid=The ${entitieNameLowerCaseWithSpace}''s final ${fieldNameLowerCaseWithSpace} is invalid!
#end
#end
#end
#if ( !$entitie.name.contains("Enum_") )
#foreach( $element in $model.allEntites )
#foreach( $field in $element.selectedLinks )
#if ( $field.fieldType.equalsIgnoreCase($entitie.name) ) 
#set ( $pluralType = $wordUtils.capitalize($inflector.getInstance().pluralize($element.name)) )
#set ( $dependentLowerCaseWithDot = $strUtils.join($strUtils.splitByCharacterTypeCamelCase($pluralType), ".").toLowerCase() )
#set ( $pluralFieldNameLowerCaseWithDot = $inflector.getInstance().pluralize($strUtils.join($strUtils.splitByCharacterTypeCamelCase($element.name), ".").toLowerCase()) )
validation.${entitieNameLowerCaseWithDot}.with.${dependentLowerCaseWithDot}.removal=${entitie.name} with ${pluralFieldNameLowerCaseWithDot} cannot be removed!
#end
#end
#end
#end
#end
validation.enumerator.value.invalid=The value ''{0}'' is invalid for ''{1}'', valid values are: {2}!
validation.get.by.ids.limit=The requested quantity exceeds the limit of 1000 items!
exception.unexpected=An unexpected error has occurred, please try again later!
exception.request.body.is.invalid.or.missing=The required request body is invalid!
exception.field.format=The ''{0}'' field provided is not in an expected format!
exception.access.denied=Access denied!
exception.database.constraint.violation=An unexpected error occurred while updating the data, please try again later!
