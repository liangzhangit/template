#parse ( "/include/domain_info.vm" )
package ${ROOT_PKG}.dataprovider.${entity.name.toLowerCase()}.mapper;

import org.mapstruct.Mapper;

import ${ROOT_PKG}.core.${entity.name.toLowerCase()}.domain.${entity.name};
#foreach( $field in $domainLinks )
import ${ROOT_PKG}.dataprovider.${field.fieldType.toLowerCase()}.mapper.${field.fieldType}Mapper;
#end
import ${ROOT_PKG}.dataprovider.${entity.name.toLowerCase()}.domain.${entity.name}Entity;

#include ( "/include/author.vm" )

#set ( $mappers = [] )
#foreach( $link in $domainLinks )
#set($x = $mappers.add("${link.fieldType}Mapper.class"))
#end
#if ( $mappers.size() == 0 )
@Mapper
#else
@Mapper(uses = {#foreach( $mapper in $mappers )${mapper}#if( $foreach.hasNext ), #end#end})
#end
public interface ${entity.name}Mapper {

    ${entity.name} of(final ${entity.name}Entity ${uncapitalizeEntityName}Entity);

    ${entity.name}Entity of(final ${entity.name} ${uncapitalizeEntityName});
}
